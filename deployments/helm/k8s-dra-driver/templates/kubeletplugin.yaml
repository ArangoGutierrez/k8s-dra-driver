---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "k8s-dra-driver.fullname" . }}-kubelet-plugin
  namespace: {{ include "k8s-dra-driver.namespace" . }}
  labels:
    {{- include "k8s-dra-driver.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "k8s-dra-driver.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "k8s-dra-driver.templateLabels" . | nindent 8 }}
    spec:
      serviceAccount: {{ include "k8s-dra-driver.fullname" . }}-service-account
      serviceAccountName: {{ include "k8s-dra-driver.fullname" . }}-service-account
      nodeSelector:
        nvidia.com/dra.plugin: "true"
      initContainers:
      - name: kubelet-plugin-init
        image: {{ include "k8s-dra-driver.fullimage" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["bash", "-c"]
        args:
        - >-
          set -x;
          kubectl get -n ${POD_NAMESPACE} nas ${NODE_NAME};
          if [ "${?}" = "0" ]; then
            kubectl patch -n ${POD_NAMESPACE} nas ${NODE_NAME} --type merge -p '{"status": "NotReady"}';
            exit "${?}";
          fi;
          kubectl get --ignore-not-found=true -n ${POD_NAMESPACE} nas ${NODE_NAME};
          exit "${?}";
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      containers:
      - name: kubelet-plugin
        image: {{ include "k8s-dra-driver.fullimage" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - nvidia-dra-plugin
        env:
        - name: NVIDIA_VISIBLE_DEVICES
          value: void
        - name: CDI_ROOT
          value: /var/run/cdi
        - name: NVIDIA_MIG_CONFIG_DEVICES
          value: all
        - name: LD_LIBRARY_PATH
          value: /usr/lib64/:/run/nvidia/driver/usr/lib/x86_64-linux-gnu
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext:
          privileged: true
        volumeMounts:
        - name: plugins-registry
          mountPath: /var/lib/kubelet/plugins_registry
        - name: plugins
          mountPath: /var/lib/kubelet/plugins
        - name: cdi
          mountPath: /var/run/cdi
        - name: driver-root
          mountPath: /run/nvidia/driver
          readOnly: true
        lifecycle:
          preStop:
            exec: 
              command:
              - bash
              - -c
              - >-
                set -x;
                kubectl get -n ${POD_NAMESPACE} nas ${NODE_NAME};
                if [ "${?}" = "0" ]; then
                  kubectl patch -n ${POD_NAMESPACE} nas ${NODE_NAME} --type merge -p '{"status": "NotReady"}';
                  exit "${?}";
                fi;
                kubectl get --ignore-not-found=true -n ${POD_NAMESPACE} nas ${NODE_NAME};
                exit "${?}";
      volumes:
      - name: plugins-registry
        hostPath:
          path: /var/lib/kubelet/plugins_registry
      - name: plugins
        hostPath:
          path: /var/lib/kubelet/plugins
      - name: cdi
        hostPath:
          path: /var/run/cdi
      - name: driver-root
        hostPath:
          path: /run/nvidia/driver


